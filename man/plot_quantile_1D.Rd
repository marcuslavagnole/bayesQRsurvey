% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_quantile.R
\name{plot_quantile_1D}
\alias{plot_quantile_1D}
\title{Unified 1D Quantile Plotting for Bayesian Quantile Regression}
\usage{
plot_quantile_1D(
  object,
  data,
  predictor,
  show_data = FALSE,
  response = NULL,
  grid_length = 100,
  fixed_values = NULL,
  use_ggplot = NULL,
  paintedArea = FALSE,
  band_choice = c("minmax", "symmetric"),
  line_col = NULL,
  line_lwd = 2,
  line_type = 1,
  data_col = "steelblue",
  data_alpha = 0.4,
  main = NULL,
  add = FALSE,
  ...
)
}
\arguments{
\item{object}{A fitted quantile regression object of class \code{bqr.svy} or
\code{mo.bqr.svy} (with response_dim = 1).}

\item{data}{A \code{data.frame} containing the variables used in the model.
Must include the predictor specified in \code{predictor} and any covariates
in the fitted model.}

\item{predictor}{A character string giving the name of the predictor variable
to plot on the x-axis.}

\item{show_data}{Logical; if \code{TRUE}, shows the observed data points as a
scatter plot underneath the quantile curves.}

\item{response}{Character string giving the name of the response variable.
For \code{bqr.svy} objects, this is extracted automatically from the formula.
For \code{mo.bqr.svy} objects, specify the response column name.}

\item{grid_length}{Integer; number of grid points to generate for continuous
predictors. Ignored for categorical predictors.}

\item{fixed_values}{Optional named list giving fixed values for covariates other
than \code{predictor}. If not supplied, numeric covariates are fixed at their
median and factors at their most frequent level.}

\item{use_ggplot}{Logical; if \code{TRUE}, uses ggplot2 for plotting,
otherwise uses base R graphics. If \code{NULL} (default), automatically
selects ggplot2 for multiple quantiles and base R for single quantiles.}

\item{paintedArea}{Logical; if \code{TRUE} and multiple quantiles are present,
fills the area between extreme quantiles (only when \code{use_ggplot = TRUE}).}

\item{band_choice}{Character; for painted areas, either \code{"minmax"}
(between min and max quantiles) or \code{"symmetric"} (between quantiles
around 0.5). Only used when \code{use_ggplot = TRUE}.}

\item{line_col}{Color for the regression line(s). For multiple quantiles, can be
a vector of colors or a single color (recycled).}

\item{line_lwd}{Line width for the regression line.}

\item{line_type}{Line type for the regression line.}

\item{data_col}{Color for the observed data points (when \code{show_data = TRUE}).}

\item{data_alpha}{Transparency for the observed data points (0-1, when \code{show_data = TRUE}).}

\item{main}{Main title for the plot. If \code{NULL}, a default is constructed.}

\item{add}{Logical; if \code{TRUE}, adds the curve to an existing plot instead of
creating a new one (only for base R graphics).}

\item{...}{Additional graphical parameters passed to the underlying plotting functions.}
}
\value{
For ggplot2: a ggplot object. For base R: invisibly returns a data.frame
with prediction results.
}
\description{
A unified interface for plotting univariate quantile regression curves from
fitted \code{bqr.svy} or \code{mo.bqr.svy} objects (with response_dim = 1).
This function automatically detects the model type and uses the appropriate
plotting method, providing a consistent interface for both model types.
}
\details{
This function provides a unified interface that works with both:
\itemize{
\item \code{bqr.svy} objects (univariate Bayesian quantile regression)
\item \code{mo.bqr.svy} objects with \code{response_dim = 1} (multivariate setup with 1D response)
}

For \code{bqr.svy} objects, it uses the optimized \code{plot_quantile.bqr.svy} method.
For \code{mo.bqr.svy} objects with 1D response, it uses \code{drawQuantile1D}.

The function automatically detects:
\itemize{
\item Model type (bqr.svy vs mo.bqr.svy)
\item Response variable name (for bqr.svy)
\item Whether to use ggplot2 or base R graphics
}
}
\examples{
\dontrun{
# Works with bqr.svy objects
fit1 <- bqr.svy(y ~ x, data = mydata, quantile = 0.5)
plot_quantile_1D(fit1, data = mydata, predictor = "x")
plot_quantile_1D(fit1, data = mydata, predictor = "x", show_data = TRUE)

# Works with mo.bqr.svy objects (1D response)
fit2 <- mo.bqr.svy(y ~ x, data = mydata, quantile = c(0.1, 0.5, 0.9))
plot_quantile_1D(fit2, data = mydata, predictor = "x", response = "y")
plot_quantile_1D(fit2, data = mydata, predictor = "x", response = "y", 
                 show_data = TRUE, use_ggplot = TRUE)
}

}
\keyword{internal}
