% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_quantile.R
\name{plot_quantile.bqr.svy}
\alias{plot_quantile.bqr.svy}
\title{Plot predicted quantile regression curve for bqr.svy objects}
\usage{
plot_quantile.bqr.svy(
  object,
  data,
  predictor,
  show_data = FALSE,
  grid_length = 100,
  fixed_values = NULL,
  add = FALSE,
  line_col = NULL,
  line_lwd = 2,
  line_type = 1,
  point_pch = 19,
  point_cex = 1.2,
  data_col = "steelblue",
  data_alpha = 0.4,
  data_pch = 16,
  data_cex = 1,
  prefer_predict = FALSE,
  main = NULL,
  use_ggplot = NULL,
  paintedArea = FALSE,
  band_choice = c("minmax", "symmetric"),
  ...
)
}
\arguments{
\item{object}{An object of class \code{bqr.svy}, typically the result of a call
to \code{\link{bqr.svy}}.}

\item{data}{A \code{data.frame} containing the variables used in the model. Must
include the predictor specified in \code{predictor} and any covariates in the
fitted model.}

\item{predictor}{A character string giving the name of the predictor variable
to plot on the x-axis.}

\item{show_data}{Logical; if \code{TRUE}, shows the observed data points as a
scatter plot underneath the quantile curves.}

\item{grid_length}{Integer; number of grid points to generate for continuous
predictors. Ignored for categorical predictors.}

\item{fixed_values}{Optional named list giving fixed values for covariates other
than \code{predictor}. If not supplied, numeric covariates are fixed at their
median and factors at their most frequent level.}

\item{add}{Logical; if \code{TRUE}, adds the curve to an existing plot instead of
creating a new one.}

\item{line_col}{Color for the regression line(s). For multiple quantiles, can be
a vector of colors or a single color (recycled).}

\item{line_lwd}{Line width for the regression line.}

\item{line_type}{Line type for the regression line.}

\item{point_pch}{Plotting symbol to use for points (categorical predictors).}

\item{point_cex}{Size of the plotting symbols for points (categorical predictors).}

\item{data_col}{Color for the observed data points (when \code{show_data = TRUE}).}

\item{data_alpha}{Transparency for the observed data points (0-1, when \code{show_data = TRUE}).}

\item{data_pch}{Plotting symbol for the observed data points.}

\item{data_cex}{Size of the observed data points.}

\item{prefer_predict}{Logical; if \code{TRUE}, attempts to use the
\code{predict()} method for the fitted object first.}

\item{main}{Main title for the plot. If \code{NULL}, a default is constructed.}

\item{use_ggplot}{Logical; if \code{TRUE}, uses \code{drawQuantile1D} for multiple
quantiles (requires ggplot2), otherwise uses base R graphics.}

\item{paintedArea}{Logical; if \code{TRUE} and multiple quantiles are present,
fills the area between extreme quantiles (only when \code{use_ggplot = TRUE}).}

\item{band_choice}{Character; for painted areas, either \code{"minmax"}
(between min and max quantiles) or \code{"symmetric"} (between quantiles
around 0.5). Only used when \code{use_ggplot = TRUE}.}

\item{...}{Additional graphical parameters passed to \code{\link[graphics]{plot}},
\code{\link[graphics]{points}}, or \code{\link[graphics]{lines}}.}
}
\value{
Invisibly returns a \code{data.frame} with:
\item{predictor}{The sequence or factor levels of the predictor.}
\item{predicted}{The predicted quantile values.}
\item{quantile}{The tau value(s) used.}
}
\description{
This function plots the predicted quantile regression curve from a fitted
\code{bqr.svy} model. It can handle both numeric and categorical predictors,
optionally overlays the curve on an existing plot, and can show observed data points.
When the object contains multiple quantiles, all curves are plotted with different
colors and a legend is added automatically.
}
\examples{
\dontrun{
# Single quantile without data points
fit <- bqr.svy(y ~ x, data = mydata, quantile = 0.5)
plot_quantile.bqr.svy(fit, data = mydata, predictor = "x")

# Single quantile with data points
plot_quantile.bqr.svy(fit, data = mydata, predictor = "x", show_data = TRUE)

# Multiple quantiles with data points
fit_multi <- bqr.svy(y ~ x, data = mydata, quantile = c(0.1, 0.5, 0.9))
plot_quantile_1D(fit_multi, data = mydata, predictor = "x", show_data = TRUE)
}
}
\keyword{internal}
