% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_quantile.R
\name{drawQuantileRegion_3D}
\alias{drawQuantileRegion_3D}
\title{Draw quantile regions (3D) for mo.bqr.svy using convex hulls}
\usage{
drawQuantileRegion_3D(
  fit,
  xValue = NULL,
  opacity = 0.5,
  datafile = NULL,
  response = c("Y1", "Y2", "Y3"),
  show_points = FALSE,
  point_opacity = 0.25,
  point_size = 2,
  nrows = 1,
  ncols = NULL,
  show_titles = TRUE,
  round_digits = 10,
  main = NULL
)
}
\arguments{
\item{fit}{\code{mo.bqr.svy} object with \code{response_dim = 3}.}

\item{xValue}{Predictor values at which to evaluate the region. Can be:
\itemize{
\item \code{NULL}: uses the mean design vector (all zeros).
\item \code{data.frame}: one or more rows specifying predictor settings.
\item \code{list} of data.frames: each element is one row of predictors.
}
Works in the same way as in \code{drawQuantileRegion} (2D).}

\item{opacity}{Opacity, between 0 and 1, of each quantile body.}

\item{datafile}{Optional \code{data.frame} with observed responses to overlay.}

\item{response}{Character vector of length 3 naming the Y columns in
\code{datafile}, e.g. \code{c("Y1","Y2","Y3")}.}

\item{show_points}{Logical; if \code{TRUE} and valid \code{datafile}/
\code{response} are provided, overlays observed points as a 3D scatter.}

\item{point_opacity}{Opacity of observed points.}

\item{point_size}{Size of observed points.}

\item{nrows}{Number of rows in the grid of subplots (when multiple quantiles).}

\item{ncols}{Number of columns in the grid of subplots. If \code{NULL},
computed automatically from the number of quantiles and \code{nrows}.}

\item{show_titles}{Logical; if \code{TRUE}, adds facet titles (e.g. tau = 0.5)
above each subplot.}

\item{round_digits}{Integer, number of digits to round projected points
before computing convex hulls (helps remove duplicates).}

\item{main}{Main title for the plot. If \code{NULL}, a default is constructed.}
}
\value{
A \pkg{plotly} object with one 3D scene per quantile, each containing
a convex-hull mesh for every \code{xValue}, plus (optionally) the observed
data points.
}
\description{
This function visualizes trivariate quantile regions from a fitted
\code{mo.bqr.svy} object using \pkg{plotly}. For each requested quantile
level, a convex hull is computed from the directional points and plotted as
a 3D mesh. When multiple quantiles are present, each one is displayed in its
own subplot (grid of 3D panels).
}
\details{
Internally, the function computes directional projections of the fitted model
via \code{.collect_points_for_tau}, applies a convex hull with
\code{geometry::convhulln}, and then maps triangular faces to a mesh object.
The resulting quantile bodies are plotted in interactive 3D. When multiple
quantiles are present, they are arranged in a grid of subplots so each level
can be inspected separately.
}
\examples{
\dontrun{
# Fit a trivariate model
fit3 <- mo.bqr.svy(cbind(Y1,Y2,Y3) ~ x, data=df3,
                   weights=df3$w, quantile=c(0.5,0.8), U=U)

# Visualize quantile bodies at x = -1, 0, 1
drawQuantileRegion_3D(fit3,
                      xValue=data.frame(x=c(-1,0,1)),
                      datafile=df3, response=c("Y1","Y2","Y3"),
                      show_points=TRUE)
}

}
\keyword{internal}
